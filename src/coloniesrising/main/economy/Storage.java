package coloniesrising.main.economy;

public class Storage {
	
		public static int id = 0;
		public static int ammountSelling = 0;
	
		public static int Coal;
		public static int Salt;
		public static int Iron;
		public static int Bauxite;
		public static int Copper;
		public static int Nickel;
		public static int Silver;
		public static int Uranium;
		public static int Gold;
		public static int Titanium;
		public static int Tritium;
		public static int Palladium;
		public static int Platinum;
		public static int Helium3;
		
		public static int Food;
		public static int Hops;
		public static int Grapes;
		public static int FiberPlants;
		public static int RawWood;
		public static int RawSpecialWood;
		public static int OilPlants;
		public static int Rubber;
		public static int Pasture;
		public static int Silicon;
		
		public static int Steel;
		public static int StainlessSteel;
		public static int Tools;
		public static int ConvenienceFoods;
		public static int Battery;
		public static int CircuitBoard;
		public static int Devices;
		public static int Transport;
		public static int AirTransport;
		public static int Jewellery;
		public static int Wood;
		public static int SpecialWood;
		public static int FuelRod;
		public static int Superconductors;
		public static int GasStorage;
		public static int Clothing;
		public static int IndustrialFiber;
		public static int Beer;
		public static int Champagner;
		public static int PlantOil;
		public static int HighEnergyFuel;
		
		public void sell() {
			
			switch(id) {	
			case 0: Coal = Coal - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + ammountSelling;
			break;
			case 1: Salt = Salt - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + ammountSelling;
			break;
			case 2: Iron = Iron - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + ammountSelling;
			break;
			case 3: Bauxite = Bauxite - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + ammountSelling;
			break;
			case 4: Copper = Copper - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + ammountSelling;
			break;
			case 5: Nickel = Nickel - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + ammountSelling;
			break;
			case 6: Silver = Silver - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + (ammountSelling * 2);
			break;
			case 7: Uranium = Uranium - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + (ammountSelling * 3);
			break;
			case 8: Gold = Gold - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + (ammountSelling * 3);
			break;
			case 9: Titanium = Titanium - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + (ammountSelling * 2);
			break;
			case 10: Tritium = Tritium - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + (ammountSelling * 3);
			break;
			case 11: Palladium = Palladium - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + (ammountSelling * 4);
			break;
			case 12: Platinum = Platinum - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + (ammountSelling * 4);
			break;
			case 13: Helium3 = Helium3 - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + (ammountSelling * 6);
			break;
			case 14: Food = Food - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + ammountSelling;
			break;
			case 15: Hops = Hops - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + ammountSelling;
			break;
			case 16: Grapes = Grapes - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + ammountSelling;
			break;
			case 17: FiberPlants = FiberPlants - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + ammountSelling;
			break;
			case 18: RawWood = RawWood - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + ammountSelling;
			break;
			case 19: RawSpecialWood = RawSpecialWood - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + (ammountSelling * 2);
			break;
			case 20: OilPlants = OilPlants - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + ammountSelling;
			break;
			case 21: Rubber = Rubber - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + ammountSelling;
			break;
			case 22: Pasture = Pasture - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + ammountSelling;
			break;
			case 23: Silicon = Silicon - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + ammountSelling;
			break;
			case 24: Steel = Steel - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + (ammountSelling * 3);
			break;			
			case 25: StainlessSteel = StainlessSteel - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + (ammountSelling * 5);
			break;
			case 26: Tools = Tools - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + (ammountSelling * 7);
			break;
			case 27: ConvenienceFoods = ConvenienceFoods - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + (ammountSelling * 4);
			break;
			case 28: Battery = Battery - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + (ammountSelling * 7);
			break;
			case 29: CircuitBoard = CircuitBoard - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + (ammountSelling * 3);
			break;
			case 30: Devices = Devices - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + (ammountSelling * 7);
			break;
			case 31: Transport = Transport - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + (ammountSelling * 10);
			break;
			case 32: AirTransport = AirTransport - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + (ammountSelling * 16);
			break;
			case 33: Jewellery = Jewellery - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + (ammountSelling * 11);
			break;
			case 34: Wood = Wood - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + (ammountSelling * 2);
			break;
			case 35: SpecialWood = SpecialWood - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + (ammountSelling * 3);
			break;
			case 36: FuelRod = FuelRod - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + (ammountSelling * 5);
			break;
			case 37: Superconductors = Superconductors - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + (ammountSelling * 5);
			break;
			case 38: GasStorage = GasStorage - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + (ammountSelling * 5);
			break;
			case 39: Clothing = Clothing - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + (ammountSelling * 2);
			break;
			case 40: IndustrialFiber = IndustrialFiber - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + (ammountSelling * 6);
			break;
			case 41: Beer = Beer - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + (ammountSelling * 3);
			break;
			case 42: Champagner = Champagner - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + (ammountSelling * 3);
			break;
			case 43: PlantOil = PlantOil - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + (ammountSelling * 2);
			break;
			case 44: HighEnergyFuel = HighEnergyFuel - ammountSelling;
			coloniesrising.main.Main.money = coloniesrising.main.Main.money + (ammountSelling * 3);
			break;
			
			}
			
		}
		
		

}
